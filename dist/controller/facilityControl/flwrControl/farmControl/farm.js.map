{"version":3,"sources":["../../../../../src/controller/facilityControl/flwrControl/farmControl/farm.js"],"names":["config","db","api","get","req","res","Farm","find","err","farm","send","json","findById","params","id","console","log","put","farmName","body","harvestDate","save","message","delete","authenticate","status","remove","_id","Strain","strain","CloneData","clone","flowerRooms","post","newStrain","strainName","push"],"mappings":"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","file":"farm.js","sourcesContent":["import mongoose from 'mongoose';\nimport {\n  Router\n} from 'express';\n\nimport FlwrRooms from '../../../../model/facilityModel/flowerRooms';\nimport Farm from '../../../../model/facilityModel/flwrRoomModel/farm';\nimport Strain from '../../../../model/facilityModel/flwrRoomModel/farmModel/strain';\n\nimport {\n  authenticate\n} from '../../../../middleware/authMiddleware';\n\nexport default ({\n  config,\n  db\n}) => {\n  let api = Router();\n\n\n\n  // '/v1/entity/facility/flowerRooms/farm' Read\n  api.get('/', (req, res) => {\n    Farm.find({}, (err, farm) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(farm);\n    });\n  });\n\n  api.get('/:id', (req, res) => {\n    Farm.findById( req.params.id , (err, farm) => {\n      if (err) {\n        res.send(err);\n      }\n      console.log(\"Get Strain By Id: \")\n      console.log(req.params.id)\n      res.json(farm);\n    });\n  });\n\n  // '/v1/entity/facility/flowerRooms/farm/:id' Read 1\n\n  // '/v1/entity/facility/flowerRooms/farm/:id' Update\n  api.put('/:id', (req, res) => {\n    Farm.findById(req.params.id , (err, farm) => {\n      if (err) {\n        res.send(err);\n      }\n      farm.farmName = req.body.farmName;\n      farm.harvestDate = req.body.harvestDate;\n      farm.save(err => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({\n          message: \"Farm info Updated\"\n        });\n      });\n    });\n  });\n\n  // '/v1/entity/facility/flowerRooms/farm/:id' - delete\n\n  api.delete('/:id', authenticate, (req, res) => {\n      Farm.findById(req.params.id, (err, farm) => {\n          if (err) {\n              res.status(500).send(err);\n              return;\n            }\n            if (farm === null) {\n              res.status(404).send(\"Farm Not Found\");\n              return;\n            }\n            Farm.remove({\n                _id: req.params.id\n              }, (err, farm) => {\n                if (err) {\n                  res.send(err);\n                }\n\n              Strain.remove({\n                  farm: req.params.id\n                }, (err, strain) => {\n                  if (err) {\n                    res.send(err);\n                  }\n\n                CloneData.remove({\n                    strain: req.params.id\n                  }, (err, clone) => {\n                    if (err) {\n                      res.send(err);\n                  }\n                });\n            });\n\n         res.json({\n          message: \"Farm, and other Meta Data Successfully Removed\"\n        });\n\n      });\n  });\n});\n\n\napi.get('/:flowerRoom', (req, res) => {\n  Farm.find({\n    flowerRooms: req.params.flowerRooms\n  }, (err, farm) => {\n    if (err) {\n      res.send(err);\n    }\n    res.json(farm);\n  });\n});\n\n\n// CRUD = Create Read Update delete\n// '/v1/entity/facility/farm/strain/add' - Create\n\napi.post('/strain/add/:id', (req, res) => {\n  Farm.findById(req.params.id, (err, farm) => {\n    if (err) {\n      res.send(err);\n    }\n    let newStrain = new Strain();\n    newStrain.strainName = req.body.strainName;\n    newStrain.farm = farm._id;\n    newStrain.save((err, strain) => {\n      if (err) {\n        res.send(err);\n      }\n      farm.strain.push(newStrain);\n      farm.save(err => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({\n          message: 'Strain Saved Successfully'\n        });\n      });\n    });\n  });\n});\n\napi.get('/getStrainList/:id', authenticate, (req, res) => {\n  Strain.find({\n    farm: req.params.id\n  },(err, strain) => {\n    if (err) {\n      res.status(500).send(err);\n      return;\n    }\n    if (strain === null) {\n      res.status(404).send(\"Flower Room Not Found\");\n      return;\n    }\n  //  console.log([flowerRooms.flowerRooms])\n  //  console.log(flowerRooms.username)\n//    console.log(flowerRooms.id)\n//    console.log(flowerRooms.__v)\n    console.log(\"getStrainList API CALL:\")\n    console.log(req.params.id)\n    console.log(strain)\n    res.json(strain)\n\n  });\n});\n\n\n\n\n\nreturn api;\n}\n"]}