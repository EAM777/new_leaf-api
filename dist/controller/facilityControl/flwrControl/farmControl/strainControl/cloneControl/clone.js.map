{"version":3,"sources":["../../../../../../../src/controller/facilityControl/flwrControl/farmControl/strainControl/cloneControl/clone.js"],"names":["config","db","api","get","req","res","CloneData","find","err","cloneData","send","json","findById","params","id","delete","authenticate","status","remove","_id","message","body","growFlowId"],"mappings":";;;;;;AAAA;;;;AACA;;AAGA;;;;AACA;;;;AAEA;;;;kBAIe,gBAGT;AAAA,MAFJA,MAEI,QAFJA,MAEI;AAAA,MADJC,EACI,QADJA,EACI;;AACJ,MAAIC,MAAM,sBAAV;;AAEA;AACA;;AAEAA,MAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBC,oBAAUC,IAAV,CAAe,EAAf,EAAmB,UAACC,GAAD,EAAMC,SAAN,EAAoB;AACrC,UAAID,GAAJ,EAAS;AACPH,YAAIK,IAAJ,CAASF,GAAT;AACD;AACDH,UAAIM,IAAJ,CAASF,SAAT;AACD,KALD;AAMD,GAPD;;AASAP,MAAIC,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BC,oBAAUM,QAAV,CAAmBR,IAAIS,MAAJ,CAAWC,EAA9B,EACE,UAACN,GAAD,EAAMC,SAAN,EAAoB;AACpB,UAAID,GAAJ,EAAS;AACPH,YAAIK,IAAJ,CAASF,GAAT;AACD;AACDH,UAAIM,IAAJ,CAASF,SAAT;AACD,KAND;AAOD,GARD;;AAUA;AACAP,MAAIa,MAAJ,CAAW,MAAX,EAAmBC,4BAAnB,EAAiC,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC7CC,oBAAUM,QAAV,CAAmBR,IAAIS,MAAJ,CAAWC,EAA9B,EAAkC,UAACN,GAAD,EAAMC,SAAN,EAAoB;AACpD,UAAID,GAAJ,EAAS;AACPH,YAAIY,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqBF,GAArB;AACA;AACD;AACD,UAAIC,cAAc,IAAlB,EAAwB;AACtBJ,YAAIY,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB,sBAArB;AACA;AACD;AACDJ,sBAAUY,MAAV,CAAiB;AACfC,aAAKf,IAAIS,MAAJ,CAAWC;AADD,OAAjB,EAEG,UAACN,GAAD,EAAMC,SAAN,EAAoB;AACrB,YAAID,GAAJ,EAAS;AACPH,cAAIK,IAAJ,CAASF,GAAT;AACD;AACDH,YAAIM,IAAJ,CAAS;AACPS,mBAAS;AADF,SAAT;AAGD,OATD;AAUD,KAnBD;AAoBD,GArBD;;AAwBA;;AAEAlB,MAAIC,GAAJ,CAAQ,yBAAR,EAAmC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/CC,oBAAUC,IAAV,CAAe;AACbE,iBAAWL,IAAIiB,IAAJ,CAASC;AADP,KAAf,EAEG,UAACd,GAAD,EAAMc,UAAN,EAAqB;AACtB,UAAId,GAAJ,EAAS;AACPH,YAAIK,IAAJ,CAASF,GAAT;AACD;AACDH,UAAIM,IAAJ,CAASW,UAAT;AACD,KAPD;AAQD,GATD;;AAYA,SAAOpB,GAAP;AACD,C","file":"clone.js","sourcesContent":["import mongoose from 'mongoose';\nimport {\n  Router\n} from 'express';\nimport Strain from '../../../../../../model/facilityModel/flwrRoomModel/farmModel/strain';\nimport CloneData from '../../../../../../model/facilityModel/flwrRoomModel/farmModel/cloneModel/clone';\n\nimport {\n  authenticate\n} from '../../../../../../middleware/authMiddleware';\n\nexport default ({\n  config,\n  db\n}) => {\n  let api = Router();\n\n  // get clone data for specific strain id\n  // '/v1/entity/facility/flowerRoom/farm/strain/:id'\n\n  api.get('/', (req, res) => {\n    CloneData.find({}, (err, cloneData) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(cloneData)\n    });\n  });\n\n  api.get('/:id', (req, res) => {\n    CloneData.findById(req.params.id\n    , (err, cloneData) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(cloneData);\n    });\n  });\n\n  // '/v1/entity/facility/flowerRoom/farm/strain/:id' - UPDATE\n  api.delete('/:id', authenticate, (req, res) => {\n    CloneData.findById(req.params.id, (err, cloneData) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (cloneData === null) {\n        res.status(404).send(\"Clone Data not Found\");\n        return;\n      }\n      CloneData.remove({\n        _id: req.params.id\n      }, (err, cloneData) => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({\n          message: \"Clone Data Successfully Removed\"\n        })\n      });\n    });\n  });\n\n\n  // get clone by growFlowId\n\n  api.get('/growFlowId/:growFlowId', (req, res) => {\n    CloneData.find({\n      cloneData: req.body.growFlowId\n    }, (err, growFlowId) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(growFlowId);\n    });\n  });\n\n\n  return api;\n}\n"]}